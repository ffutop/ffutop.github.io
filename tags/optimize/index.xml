<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>optimize on Utop's Blog</title><link>https://www.ffutop.com/tags/optimize/</link><description>Recent content in optimize on Utop's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cmn-Hans-CN</language><lastBuildDate>Wed, 17 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.ffutop.com/tags/optimize/index.xml" rel="self" type="application/rss+xml"/><item><title>TimescaleDB 超表查询性能优化</title><link>https://www.ffutop.com/posts/2024-01-17-timescaledb-chunks-excluded/</link><pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.ffutop.com/posts/2024-01-17-timescaledb-chunks-excluded/</guid><description>最近后端服务在查询一张时序表时，莫名出现了断崖式的性能表现下降现象。出于对问题根本原因的探求，作者深入学习了 PostgreSQL 的规划器与执行器，以及 TimescaleDB 约束排</description></item><item><title>[译](Timescale)实施约束排除以提高查询性能</title><link>https://www.ffutop.com/posts/2024-01-16-timescaledb-constriant-exclusion/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.ffutop.com/posts/2024-01-16-timescaledb-constriant-exclusion/</guid><description>译者序 本文来自 Timescale - Implementing constraint exclusion for faster query performance 。主要介绍 TimescaleDB 官方如何利用 PostgreSQL 节点及自定义扫描节点，实现三种不同场景下的查询性能优化。 译者水平有限，不免存在遗漏</description></item></channel></rss>