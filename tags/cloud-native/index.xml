<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud Native on Utop's Blog</title><link>https://www.ffutop.com/tags/cloud-native/</link><description>Recent content in Cloud Native on Utop's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cmn-Hans-CN</language><lastBuildDate>Sat, 26 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.ffutop.com/tags/cloud-native/index.xml" rel="self" type="application/rss+xml"/><item><title>告别 Spring Boot 慢启动：GraalVM 原生镜像迁移实践</title><link>https://www.ffutop.com/posts/2025-07-26-spring-boot-native-migration-guide/</link><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid>https://www.ffutop.com/posts/2025-07-26-spring-boot-native-migration-guide/</guid><description>随着云原生和 Serverless 架构的兴起，应用的启动速度、内存占用和打包体积变得至关重要。Spring Boot 3.x 结合 GraalVM Native Image 技术，为 Java 应用提供了“原生编译”这一颠覆</description></item><item><title>剖析 GraalVM Native Image 技术</title><link>https://www.ffutop.com/posts/2025-07-26-graalvm-native-image/</link><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid>https://www.ffutop.com/posts/2025-07-26-graalvm-native-image/</guid><description>Java 语言凭借其强大的生态系统和“一次编写，到处运行”的跨平台能力，在企业级应用领域保持着长久的生命力。然而，随着云原生和边缘计算时代的到来，传</description></item></channel></rss>