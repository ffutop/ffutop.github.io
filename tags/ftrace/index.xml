<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ftrace on Utop's Blog</title><link>https://www.ffutop.com/tags/ftrace/</link><description>Recent content in ftrace on Utop's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cmn-Hans-CN</language><lastBuildDate>Sun, 02 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.ffutop.com/tags/ftrace/index.xml" rel="self" type="application/rss+xml"/><item><title>跟踪内核函数的工具—— Ftrace</title><link>https://www.ffutop.com/posts/2019-06-02-ftrace/</link><pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate><guid>https://www.ffutop.com/posts/2019-06-02-ftrace/</guid><description>&lt;p>前两天仿照 &lt;code>strings&lt;/code> 工具写了个打印进程运行时堆栈可打印字符的工具 &lt;a href="https://github.com/DorMOUSE-None/ff-proc-utils/blob/master/ffstrings.c">ffstrings&lt;/a> 。结果没几天就被告知在 CentOS 上跑不通(uid: root, errno: EPERM):&amp;lt;&lt;/p>
&lt;p>在反复调试无果之后，希望得到一种可以跟踪内核执行流的工具。功夫不负有心人，在内核文档中找到了—— &lt;code>ftrace&lt;/code> 。&lt;/p>
&lt;blockquote>
&lt;p>Ftrace 是位于内核内部的跟踪器，可以用来调试和分析发生在用户空间（内核空间）之外的延迟和性能问题。&lt;/p>
&lt;p>虽然 Ftrace 是一款函数跟踪器，但也支持基于其它目的的跟踪，例如：跟踪上下文切换、跟踪高优先级任务的执行时间等等。另外还可以通过插件的方式自定义更多的跟踪。&lt;/p>
&lt;/blockquote>
&lt;p>当然，目前仅仅是做简单的介绍。毕竟最初的目的是为了确认 &lt;code>ffstrings&lt;/code> 出现 &lt;code>EPERM&lt;/code> 的原因。&lt;/p></description></item></channel></rss>